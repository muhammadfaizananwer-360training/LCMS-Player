//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4952.
// 
#pragma warning disable 1591

namespace ICP4.BusinessLogic.ICP4PlayerUtility {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PlayerUtilitySoap", Namespace="http://tempuri.org/")]
    public partial class PlayerUtility : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback InvalidateCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback InvalidateCacheAndNotifyToAllRemainingServersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSessionTimeOutKeyValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAppSettingKeyValueOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PlayerUtility() {
            this.Url = global::ICP4.BusinessLogic.Properties.Settings.Default.ICP4_BusinessLogic_ICP4PlayerUtility_PlayerUtility;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event InvalidateCacheCompletedEventHandler InvalidateCacheCompleted;
        
        /// <remarks/>
        public event InvalidateCacheAndNotifyToAllRemainingServersCompletedEventHandler InvalidateCacheAndNotifyToAllRemainingServersCompleted;
        
        /// <remarks/>
        public event GetSessionTimeOutKeyValueCompletedEventHandler GetSessionTimeOutKeyValueCompleted;
        
        /// <remarks/>
        public event GetAppSettingKeyValueCompletedEventHandler GetAppSettingKeyValueCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InvalidateCache", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InvalidateCache(int publishedCourseId) {
            object[] results = this.Invoke("InvalidateCache", new object[] {
                        publishedCourseId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InvalidateCacheAsync(int publishedCourseId) {
            this.InvalidateCacheAsync(publishedCourseId, null);
        }
        
        /// <remarks/>
        public void InvalidateCacheAsync(int publishedCourseId, object userState) {
            if ((this.InvalidateCacheOperationCompleted == null)) {
                this.InvalidateCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInvalidateCacheOperationCompleted);
            }
            this.InvokeAsync("InvalidateCache", new object[] {
                        publishedCourseId}, this.InvalidateCacheOperationCompleted, userState);
        }
        
        private void OnInvalidateCacheOperationCompleted(object arg) {
            if ((this.InvalidateCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InvalidateCacheCompleted(this, new InvalidateCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InvalidateCacheAndNotifyToAllRemainingServers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InvalidateCacheAndNotifyToAllRemainingServers(int publishedCourseId, bool notifytoAllRemainingServers) {
            object[] results = this.Invoke("InvalidateCacheAndNotifyToAllRemainingServers", new object[] {
                        publishedCourseId,
                        notifytoAllRemainingServers});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InvalidateCacheAndNotifyToAllRemainingServersAsync(int publishedCourseId, bool notifytoAllRemainingServers) {
            this.InvalidateCacheAndNotifyToAllRemainingServersAsync(publishedCourseId, notifytoAllRemainingServers, null);
        }
        
        /// <remarks/>
        public void InvalidateCacheAndNotifyToAllRemainingServersAsync(int publishedCourseId, bool notifytoAllRemainingServers, object userState) {
            if ((this.InvalidateCacheAndNotifyToAllRemainingServersOperationCompleted == null)) {
                this.InvalidateCacheAndNotifyToAllRemainingServersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInvalidateCacheAndNotifyToAllRemainingServersOperationCompleted);
            }
            this.InvokeAsync("InvalidateCacheAndNotifyToAllRemainingServers", new object[] {
                        publishedCourseId,
                        notifytoAllRemainingServers}, this.InvalidateCacheAndNotifyToAllRemainingServersOperationCompleted, userState);
        }
        
        private void OnInvalidateCacheAndNotifyToAllRemainingServersOperationCompleted(object arg) {
            if ((this.InvalidateCacheAndNotifyToAllRemainingServersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InvalidateCacheAndNotifyToAllRemainingServersCompleted(this, new InvalidateCacheAndNotifyToAllRemainingServersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSessionTimeOutKeyValue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetSessionTimeOutKeyValue() {
            object[] results = this.Invoke("GetSessionTimeOutKeyValue", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetSessionTimeOutKeyValueAsync() {
            this.GetSessionTimeOutKeyValueAsync(null);
        }
        
        /// <remarks/>
        public void GetSessionTimeOutKeyValueAsync(object userState) {
            if ((this.GetSessionTimeOutKeyValueOperationCompleted == null)) {
                this.GetSessionTimeOutKeyValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSessionTimeOutKeyValueOperationCompleted);
            }
            this.InvokeAsync("GetSessionTimeOutKeyValue", new object[0], this.GetSessionTimeOutKeyValueOperationCompleted, userState);
        }
        
        private void OnGetSessionTimeOutKeyValueOperationCompleted(object arg) {
            if ((this.GetSessionTimeOutKeyValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSessionTimeOutKeyValueCompleted(this, new GetSessionTimeOutKeyValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAppSettingKeyValue", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAppSettingKeyValue(string Key) {
            object[] results = this.Invoke("GetAppSettingKeyValue", new object[] {
                        Key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAppSettingKeyValueAsync(string Key) {
            this.GetAppSettingKeyValueAsync(Key, null);
        }
        
        /// <remarks/>
        public void GetAppSettingKeyValueAsync(string Key, object userState) {
            if ((this.GetAppSettingKeyValueOperationCompleted == null)) {
                this.GetAppSettingKeyValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAppSettingKeyValueOperationCompleted);
            }
            this.InvokeAsync("GetAppSettingKeyValue", new object[] {
                        Key}, this.GetAppSettingKeyValueOperationCompleted, userState);
        }
        
        private void OnGetAppSettingKeyValueOperationCompleted(object arg) {
            if ((this.GetAppSettingKeyValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAppSettingKeyValueCompleted(this, new GetAppSettingKeyValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void InvalidateCacheCompletedEventHandler(object sender, InvalidateCacheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InvalidateCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InvalidateCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void InvalidateCacheAndNotifyToAllRemainingServersCompletedEventHandler(object sender, InvalidateCacheAndNotifyToAllRemainingServersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InvalidateCacheAndNotifyToAllRemainingServersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InvalidateCacheAndNotifyToAllRemainingServersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetSessionTimeOutKeyValueCompletedEventHandler(object sender, GetSessionTimeOutKeyValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSessionTimeOutKeyValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSessionTimeOutKeyValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void GetAppSettingKeyValueCompletedEventHandler(object sender, GetAppSettingKeyValueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAppSettingKeyValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAppSettingKeyValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591